{{- if .Values.apiServer.enabled }}
{{- $fullName := include "kubernetes.fullname" . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $fullName }}-apiserver"
  labels:
    app: "{{ $fullName }}-apiserver"
    {{- with .Values.apiServer.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    {{- with .Values.apiServer.annotations }}
    annotations:
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.apiServer.replicaCount }}
  selector:
    matchLabels:
      app: "{{ $fullName }}-apiserver"
  template:
    metadata:
      labels:
        app: "{{ $fullName }}-apiserver"
        {{- with .Values.apiServer.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.apiServer.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.apiServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiServer.tolerations }}
      tolerations:
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.apiServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiServer.image.PullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      automountServiceAccountToken: false
      containers:
      - command:
        - kube-apiserver
        - --allow-privileged=true
        - --authorization-mode=Node,RBAC
        - --bind-address=0.0.0.0
        - --client-ca-file=/pki/apiserver/ca.crt
        - --enable-admission-plugins=NodeRestriction
        - --enable-bootstrap-token-auth=true
        - --etcd-cafile=/pki/apiserver-etcd-client/ca.crt
        - --etcd-certfile=/pki/apiserver-etcd-client/tls.crt
        - --etcd-keyfile=/pki/apiserver-etcd-client/tls.key
        - --etcd-servers={{ template "kubernetes.etcdEndpoints" . }}
        - --insecure-port=0
        - --kubelet-client-certificate=/pki/apiserver-kubelet-client/tls.crt
        - --kubelet-client-key=/pki/apiserver-kubelet-client/tls.key
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --proxy-client-cert-file=/pki/front-proxy-client/tls.crt
        - --proxy-client-key-file=/pki/front-proxy-client/tls.key
        - --requestheader-allowed-names=front-proxy-client
        - --requestheader-client-ca-file=/pki/front-proxy-client/ca.crt
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        - --secure-port={{ .Values.apiServer.port }}
        - --service-account-key-file=/pki/sa/sa.pub
        - --service-cluster-ip-range={{ .Values.apiServer.serviceClusterIPRange }}
        - --tls-cert-file=/pki/apiserver/tls.crt
        - --tls-private-key-file=/pki/apiserver/tls.key
        {{- if not (hasKey .Values.apiServer.extraArgs "advertise-address") }}
        {{- with .Values.apiServer.service.loadBalancerIP }}
        - --advertise-address={{ . }}
        {{- end }}
        {{- end }}
        {{- range $key, $value := .Values.apiServer.extraArgs }}
        - --{{ $key }}={{ $value }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.apiServer.port }}
          name: client
        image: {{ .Values.apiServer.image.repository }}:{{ .Values.apiServer.image.tag }}
        imagePullPolicy: {{ .Values.apiServer.image.PullPolicy }}
        livenessProbe:
          failureThreshold: 8
          httpGet:
            path: /healthz
            port: {{ .Values.apiServer.port }}
            scheme: HTTPS
          initialDelaySeconds: 15
          timeoutSeconds: 15
        name: kube-apiserver
        resources:
          {{- toYaml .Values.apiServer.resources | nindent 10 }}
        {{- with .Values.apiServer.extraEnv }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - mountPath: /pki/front-proxy-client
          name: pki-front-proxy-client
        - mountPath: /pki/apiserver
          name: pki-apiserver
        - mountPath: /pki/apiserver-etcd-client
          name: pki-apiserver-etcd-client
        - mountPath: /pki/apiserver-kubelet-client
          name: pki-apiserver-kubelet-client
        - mountPath: /pki/sa
          name: pki-sa
        {{- with .Values.apiServer.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.apiServer.sidecars }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - secret:
          secretName: "{{ $fullName }}-pki-front-proxy-client"
        name: pki-front-proxy-client
      - secret:
          secretName: "{{ $fullName }}-pki-apiserver"
        name: pki-apiserver
      - secret:
          secretName: "{{ $fullName }}-pki-apiserver-etcd-client"
        name: pki-apiserver-etcd-client
      - secret:
          secretName: "{{ $fullName }}-pki-apiserver-kubelet-client"
        name: pki-apiserver-kubelet-client
      - secret:
          secretName: "{{ $fullName }}-pki-ca"
        name: pki-ca
      - secret:
          secretName: "{{ $fullName }}-pki-sa"
        name: pki-sa
      {{- with .Values.apiServer.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
{{- end }}
